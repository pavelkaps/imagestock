{"version":3,"sources":["repository/ImageRepository.es6"],"names":["HTTP","WeakMap","Q","ImageRepository","$http","$q","db","PouchDB","set","allDocs","include_docs","attachments","then","data","get","all","rows","map","row","getAttachment","id","Object","keys","doc","_attachments","comments","image_likes","imageUrl","URL","createObjectURL","catch","err","console","log","image","defer","docId","put","_id","resolve","reject","promise","like","deleteLikeFromDoc","own","push","userId","find","el","ind","arr","splice","comment","idImage","idComment","index","remove","getInstance","$inject"],"mappings":"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","file":"ImageRepository.js","sourcesContent":["/**\r\n * Created by Паша on 10.03.2017.\r\n */\r\nconst HTTP = new WeakMap();\r\nconst Q = new WeakMap();\r\n\r\nexport class ImageRepository {\r\n    constructor($http, $q) {\r\n        this.db = new PouchDB('imagesnew');\r\n        HTTP.set(this, $http);\r\n        Q.set(this, $q);\r\n    }\r\n\r\n    getAll() {\r\n        return this.db.allDocs({\r\n            include_docs: true,\r\n            attachments: false\r\n        }).then((data)=> {\r\n            return Q.get(this).all((data.rows.map((row)=> {\r\n                return this.db.getAttachment(row.id, Object.keys(row.doc._attachments)[0]).then((data)=> {\r\n                    return {\r\n                        id: row.id,\r\n                        comments: row.doc.comments,\r\n                        image_likes: row.doc.image_likes,\r\n                        imageUrl: URL.createObjectURL(data)\r\n                    }\r\n                });\r\n            }))).catch((err)=> {\r\n                console.log(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    put(image) {\r\n        let defer = Q.get(this).defer();\r\n        let docId = null;\r\n        this.db.put(image).then((data)=> {\r\n            return this.db.get(data.id)\r\n        }).then((doc) => {\r\n            docId = doc;\r\n            return this.db.getAttachment(doc._id, Object.keys(doc._attachments)[0]);\r\n        }).then((data)=> {\r\n            defer.resolve({\r\n                id: docId._id,\r\n                comments: docId.comments,\r\n                image_likes: docId.image_likes,\r\n                imageUrl: URL.createObjectURL(data)\r\n            });\r\n        }).catch((err)=> {\r\n                defer.reject(err);\r\n            });\r\n        return defer.promise;\r\n    }\r\n\r\n    addLike(_id, like) {\r\n        let defer = Q.get(this).defer();\r\n        this.db.get(_id).then((doc) => {\r\n            this.deleteLikeFromDoc(doc, like.own);\r\n            doc.image_likes.push(like);\r\n            this.db.put(doc).then((data)=> {\r\n                defer.resolve(doc.image_likes);\r\n            });\r\n\r\n        }).catch((err)=> {\r\n            defer.reject(err);\r\n        });;\r\n        return defer.promise;\r\n    }\r\n\r\n    deleteLike(_id, userId) {\r\n        let defer = Q.get(this).defer();\r\n        this.db.get(_id).then((doc) => {\r\n            this.deleteLikeFromDoc(doc, userId);\r\n            defer.resolve(doc.image_likes);\r\n        }).catch((err)=> {\r\n            defer.reject(err);\r\n        });;\r\n        return defer.promise;\r\n    }\r\n\r\n    deleteLikeFromDoc(doc, userId) {\r\n        doc.image_likes.find((el, ind, arr)=> {\r\n            if (el.own === userId) {\r\n                doc.image_likes.splice(ind, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    addComment(_id, comment) {\r\n        let defer = Q.get(this).defer();\r\n        this.db.get(_id).then((doc) => {\r\n            doc.comments.push(comment);\r\n            this.db.put(doc).then((data)=> {\r\n                defer.resolve(data)\r\n            });\r\n        }).catch((err)=> {\r\n            defer.reject(err);\r\n        });\r\n        return defer.promise;\r\n    }\r\n\r\n    deleteComment(idImage, idComment) {\r\n        let defer = Q.get(this).defer();\r\n        this.db.get(idImage).then((doc) => {\r\n            doc.comments.find((el, index, arr)=> {\r\n                if (el.id === idComment) {\r\n                    doc.comments.splice(index, 1);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            this.db.put(doc).then((data)=> {\r\n                defer.resolve(data)\r\n            });\r\n        }).catch((err)=> {\r\n            defer.reject(err);\r\n        });\r\n        return defer.promise;\r\n    }\r\n\r\n    getById(_id) {\r\n        this.db.get(_id).then((doc) => {\r\n            console.log(doc);\r\n        });\r\n    }\r\n\r\n    deleteImageById(_id) {\r\n        return this.db.get(_id).then((doc) => {\r\n            return this.db.remove(doc);\r\n        })\r\n    }\r\n\r\n    static getInstance($http, $q) {\r\n        return new ImageRepository($http, $q);\r\n    }\r\n}\r\n\r\nImageRepository.getInstance.$inject = ['$http', '$q'];"]}