{"version":3,"sources":["controllers/gallery-controller/gallery-controller.es6"],"names":["GalleryController","$scope","imageService","detailImageService","$mdDialog","toaster","$window","init","pop","timeout","showCloseButton","limit","resizingImages","resizer","getAll","then","data","$apply","console","log","randomResizeImages","catch","ErrorHandler","openMenu","$mdMenu","event","originatorEv","open","showConfirmForDelete","ev","image","confirm","title","targetEvent","ok","cancel","show","deleteImage","deleteImageById","id","DeleteFromResizingImages","toDetail","setImage","templateUrl","parent","angular","element","document","body","clickOutsideToClose","fullscreen","answer","addImage","push","randomResizeOneImage","countActions","action","count","image_likes","forEach","el","ind","arr","like_type","_id","filter","map","width","getWidthSize","height","getHeightSize","err","$inject"],"mappings":"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","file":"gallery-controller.js","sourcesContent":["import {ImageResizer} from '../../additional/ImageResizer'\r\n\r\nclass GalleryController {\r\n    constructor($scope, imageService, detailImageService, $mdDialog, toaster, $window) {\r\n        this.init($scope, imageService, detailImageService, $mdDialog, toaster, $window);\r\n    }\r\n\r\n    init($scope, imageService, detailImageService, $mdDialog, toaster, $window) {\r\n\r\n        toaster.pop({\r\n            timeout: 20000,\r\n            showCloseButton: true,\r\n            limit: 5\r\n        });\r\n\r\n        $scope.resizingImages = [];\r\n        $scope.resizer = new ImageResizer();\r\n\r\n        imageService.getAll().then(\r\n            function (data) {\r\n                $scope.$apply(()=> {\r\n                    console.log(data);\r\n                    $scope.resizingImages = randomResizeImages(data);\r\n                    console.log($scope.resizingImages);\r\n                });\r\n            }\r\n        ).catch(ErrorHandler);\r\n\r\n        $scope.openMenu = ($mdMenu, event) => {\r\n            var originatorEv = event;\r\n            $mdMenu.open(event);\r\n        };\r\n\r\n        $scope.showConfirmForDelete = (ev, image) => {\r\n            console.log('delete dialog');\r\n            var confirm = $mdDialog.confirm()\r\n                .title('Do you want to delete this image?')\r\n                .targetEvent(ev)\r\n                .ok('Delete')\r\n                .cancel('Cancel');\r\n            $mdDialog.show(confirm).then(()=> {\r\n                $scope.deleteImage(image);\r\n            }, () => {\r\n\r\n            });\r\n        };\r\n\r\n        $scope.deleteImage = (image) => {\r\n            console.log(image);\r\n            imageService.deleteImageById(image.id).then((data)=> {\r\n\r\n                if (data.ok === true) {\r\n                    DeleteFromResizingImages(image.id);\r\n                    toaster.pop('info', \"Успешно\", \"Изображение удалено\");\r\n                }\r\n\r\n\r\n            }).catch(ErrorHandler);\r\n        };\r\n\r\n        $scope.toDetail = (ev, image) => {\r\n            console.log(ev);\r\n            detailImageService.setImage(image);\r\n            $mdDialog.show({\r\n                templateUrl: './app/controllers/image-detail-controller/image-detail-controller.html',\r\n                parent: angular.element(document.body),\r\n                targetEvent: ev,\r\n                clickOutsideToClose: true,\r\n                fullscreen: false\r\n            }).then((answer) => {\r\n\r\n            }, () => {\r\n\r\n            });\r\n        };\r\n\r\n        $scope.addImage = function (ev) {\r\n            $mdDialog.show({\r\n                templateUrl: './app/controllers/add-image/add-image-controller.html',\r\n                parent: angular.element(document.body),\r\n                targetEvent: ev,\r\n                clickOutsideToClose: true,\r\n                fullscreen: false\r\n            }).then((image) => {\r\n                $scope.resizingImages.push(randomResizeOneImage(image))\r\n            }, () => {\r\n                console.log('cancel dialog');\r\n            });\r\n        };\r\n\r\n        $scope.countActions = (image, action) => {\r\n            var count = 0;\r\n            image.image_likes.forEach((el, ind, arr) => {\r\n                if (el.like_type === action) {\r\n                    count++;\r\n                }\r\n            });\r\n            return count;\r\n        };\r\n\r\n        function DeleteFromResizingImages(_id) {\r\n            $scope.$apply(()=>{\r\n                $scope.resizingImages = $scope.resizingImages.filter((data)=>{\r\n                    return data.image.id !== _id;\r\n                });\r\n            });\r\n\r\n            console.log($scope.resizingImages);\r\n           /* $scope.resizingImages.find((el, index, arr)=> {\r\n                if (el.image.id === _id) {\r\n                    $scope.resizingImages.splice(index, 1);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });*/\r\n        }\r\n\r\n        function randomResizeImages(data) {\r\n            return data.map((data) => {\r\n                return randomResizeOneImage(data);\r\n            });\r\n        }\r\n\r\n        function randomResizeOneImage(image) {\r\n            return {width: $scope.resizer.getWidthSize(), height: $scope.resizer.getHeightSize(), image: image};\r\n        }\r\n\r\n\r\n        function ErrorHandler(err){\r\n            console.log(err);\r\n            toaster.pop('info', \"Ошибка\", \"Произошла ошибка\");\r\n        }\r\n    }\r\n}\r\nGalleryController.$inject = ['$scope', 'imageService', 'detailImageService', '$mdDialog', 'toaster', '$window'];\r\nexport {GalleryController}"]}